import random # use in wave 1

peg_colors = ['R', 'Y', 'G', 'B', 'I', 'V']

# generate_code do something ...
def generate_code():
    len_of_list = 4
    return list(random.choices(peg_colors, len_of_list))  #必须是list

def validate_guess(guess): #wave2 same
    if len(guess) != 4:
        return False
    for cha in guess:
        if cha.upper() not in peg_colors:  # case insensitive
            return False
    return True

def color_count(guess, code): #wave3-1
    color_count_num = 0
    code_copy = code.copy()
    #const_code = tuple(code)
    #print("28", code)
    for cha in guess:
        if cha in code_copy:
            code_copy.remove(cha)  #去掉list
            color_count_num += 1
    
    #print("code-copy",code_copy)
    #print(code)
    #print("32code",const_code)
    return color_count_num

def correct_pos_and_color(guess, code): #wave3-2
    correct_pos_and_color_num = 0
    #print("39",code)
    
    for i in range(4):
        if guess[i] == code[i]:
            correct_pos_and_color_num += 1
    #print("44", code)
    return correct_pos_and_color_num

def check_guess(guess, code): #wave3-3
    int1 = correct_pos_and_color(guess, code)
    int2 = color_count(guess, code)- int1
    return int1, int2

def check_win_or_lose(guess, code, num_guesses): # wave2-2
    
    if num_guesses > 8:
        return False
    elif num_guesses == 8:
        if guess != code :
            return False
        else:
            return True

    else:
        if guess == code :
            return True
        else:
            return None
     pass

def get_win_percentage(wins, plays):
    if plays == 0:
        return 0
    else:
        percentage = wins / plays * 100
        return int(percentage)
    pass

def format_guess_stats(guess_stats):
    stats_list = ["","","","","","","",""]
    for n in guess_stats.keys():
        stats_list[n-1] = guess_stats[n] * "X"
    return stats_list
  
    pass
def mastermind():
    #implement game loop here
    wins = 0
    plays = 0
    guess_stats = { }
    
    #game = True
    print("Welcome to Mastermind!")# welcome message
    while True:
        plays += 1
        code = generate_code()
        print("""Generating a new code...
New code generated: ****
Guess the code! Each character in the code is one of
the following letters: R, Y, G, B, I, V""")
        print(f"""Assume
        code = {(code)}\n""")
        print("""
----------
Game Loop Output""")
        num_guesses = 1
        
        while num_guesses <= 8:
            guess = list(input('Please enter your four choosen color letters!').upper())
            if validate_guess(guess):
                print(num_guesses, "You guessed:", guess)
                
                if check_win_or_lose(guess, code, num_guesses) == None:
                    print(check_guess(guess, code))
                    num_guesses += 1
                    continue
        
                elif check_win_or_lose(guess, code, num_guesses) == True:
                    print("Congratulations! You guessed the secret code!")
                    wins += 1
                    
                    if num_guesses not in guess_stats.keys():
                        guess_stats[num_guesses] = 1
                    else:
                        guess_stats[num_guesses] += 1
                        break
                        
                elif check_win_or_lose(guess, code, num_guesses) == False:
                    print("You lost 😥 Better luck next time!")
                    break
            
            else:
                print('Your entry must only be 4 letters from [R, Y, G, B, I, V], please try again:')
                continue
   
        print("STATISTICS")
        print("Games Played:", plays)
        print("Win %:" , get_win_percentage(wins, plays))
        print("Guess Distribution:")
        
        for n in range(8):
        
            print(f"{n+1}| {format_guess_stats(guess_stats)[n]}")
        print("Should we play another round?")
        again = input("Enter y to replay, any other character to exit:").upper()
        if again == "Y":
            continue
        else:
            print("See you next time.")
            return False

pass




mastermind()
